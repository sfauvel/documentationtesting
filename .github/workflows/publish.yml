name: Publish and Release
# V1.0
on:
  push:
    branches: [ ci_workflow ]
#  pull_request:
#    branches: [ master ]

  workflow_dispatch:

jobs:
  merge_from_master:
    name: Merge from master
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: pages

      - name: Configure Git user
        run: |
          git config user.email "actions@noreply.github.com"
          git config user.name "GitHub Actions"

      - name: Merge from master
        run: |
          git merge origin/ci_workflow --allow-unrelated-histories -m "Merge from master"
          git push -f
#        run: git merge origin/master --allow-unrelated-histories -m "Merge from master"

  generate_doc:
    name: Generate doc
    needs: merge_from_master
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: pages

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Package with Maven
#        run: mvn -B package --file documentationtesting/pom.xml
        run: |
          mkdir -p target/docs
          echo "<html>My doc</html>" > target/docs/index.html

      - name: Copy docs
        run: |
          rm -Rf published_docs
          cp -R target/docs published_docs
          ls published_docs
          git add published_docs
#          rm -Rf docs
#          cp -R target/docs docs
#
      - name: Retrieve diff
        id: git_diff
        run: echo "::set-output name=DOC_DIFF::$(git diff --cached  | wc -l)"
#
      - name: Configure Git user
        if: steps.git_diff.outputs.DOC_DIFF > 0
        run: |
          git config user.email "actions@noreply.github.com"
          git config user.name "GitHub Actions"

      - name: Commit docs
        if: steps.git_diff.outputs.DOC_DIFF > 0
        run: |
          echo "==== GIT DIFF ===="
          echo "${{ steps.git_diff.outputs.DOC_DIFF }}"
          echo "=================="

          git add published_docs
          git commit -m "New doc"
          git push -f

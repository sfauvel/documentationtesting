# This is a basic workflow to help you get started with Actions
# https://github.com/marketplace/actions/maven-release
name: Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Configure Git user
      run: |
        git config user.email "actions@github.com"
        git config user.name "GitHub Actions"
    - name: Install graphviz
      uses: kamiazya/setup-graphviz@v1
    - name: Publish JAR
      run: mvn -B release:prepare release:perform --file documentationtesting/pom.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Update samples
      run: |
        new_version=`mvn -q -Dexec.executable="echo" -Dexec.args='${project.version}' --non-recursive exec:exec --file documentationtesting/pom.xml`
        echo "New project version: $new_version"
        for pom in samples/*/pom.xml; do mvn versions:set-property -Dproperty=documentationtesting.version -DnewVersion=$new_version -DgenerateBackupPoms=false --file $pom; done
        mvn versions:set-property -Dproperty=documentationtesting.version -DnewVersion=$new_version -DgenerateBackupPoms=false --file documentationtestingdoc/pom.xml
        git status
        git add --all
        git commit -m "[maven-release-plugin] update version in sub-projects"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}